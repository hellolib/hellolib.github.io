(window.webpackJsonp=window.webpackJsonp||[]).push([[201],{521:function(e,_,t){"use strict";t.r(_);var v=t(3),a=Object(v.a)({},(function(){var e=this,_=e._self._c;return _("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[_("h2",{attrs:{id:"写入数据的工作原理"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#写入数据的工作原理"}},[e._v("#")]),e._v(" 写入数据的工作原理")]),e._v(" "),_("h3",{attrs:{id:"_1-过程"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_1-过程"}},[e._v("#")]),e._v(" 1. 过程")]),e._v(" "),_("ol",[_("li",[_("p",[e._v("客户端选择一个 node 发送请求过去，这个 node 就是 "),_("code",[e._v("coordinating node")]),e._v("（协调节点）。")])]),e._v(" "),_("li",[_("p",[_("code",[e._v("coordinating node")]),e._v(" 对 document 进行路由，将请求转发给对应的 node（有 primary shard）。")])]),e._v(" "),_("li",[_("p",[e._v("实际的 node 上的 "),_("code",[e._v("primary shard")]),e._v(" 处理请求，然后将数据同步到 "),_("code",[e._v("replica node")]),e._v("。")])]),e._v(" "),_("li",[_("p",[_("code",[e._v("coordinating node")]),e._v(" 如果发现 "),_("code",[e._v("primary node")]),e._v(" 和所有 "),_("code",[e._v("replica node")]),e._v(" 都搞定之后，就返回响应结果给客户端。")]),e._v(" "),_("p",[_("img",{attrs:{src:"https://raw.githubusercontent.com/hellolib/pictures/main/Typora/pic-00-gitee/20220708165928.jpeg",alt:"图片"}})])])]),e._v(" "),_("h3",{attrs:{id:"_2-原理"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_2-原理"}},[e._v("#")]),e._v(" 2. 原理")]),e._v(" "),_("p",[_("img",{attrs:{src:"https://raw.githubusercontent.com/hellolib/pictures/main/Typora/pic-00-gitee/20220708170510.jpeg",alt:"图片"}})]),e._v(" "),_("ol",[_("li",[e._v("先写入内存 buffer，在 buffer 里的时候数据是搜索不到的；同时将数据写入 translog 日志文件。")]),e._v(" "),_("li",[e._v("如果 buffer 快满了，或者到一定时间，就会将内存 buffer 数据 "),_("code",[e._v("refresh")]),e._v(" 到一个新的 "),_("code",[e._v("segment file")]),e._v(" 中")]),e._v(" "),_("li",[e._v("但是此时数据不是直接进入 "),_("code",[e._v("segment file")]),e._v(" 磁盘文件，而是先进入 "),_("code",[e._v("os cache")]),e._v(" 。这个过程就是 "),_("code",[e._v("refresh")]),e._v("。")]),e._v(" "),_("li",[e._v("每隔 1 秒钟，es 将 buffer 中的数据写入一个新的 "),_("code",[e._v("segment file")]),e._v("，每秒钟会产生一个新的磁盘文件 "),_("code",[e._v("segment file")])]),e._v(" "),_("li",[_("code",[e._v("这个")]),e._v("segment file` 中就存储最近 1 秒内 buffer 中写入的数据。")]),e._v(" "),_("li",[e._v("但是如果 buffer 里面此时没有数据，那当然不会执行 refresh 操作")]),e._v(" "),_("li",[e._v("如果 buffer 里面有数据，默认 1 秒钟执行一次 refresh 操作，刷入一个新的 segment file 中。")]),e._v(" "),_("li",[e._v("操作系统里面，磁盘文件其实都有一个东西，叫做 "),_("code",[e._v("os cache")]),e._v("，即操作系统缓存")]),e._v(" "),_("li",[e._v("就是说数据写入磁盘文件之前，会先进入 "),_("code",[e._v("os cache")]),e._v("，先进入操作系统级别的一个内存缓存中去。只要 "),_("code",[e._v("buffer")]),e._v("中的数据被 refresh 操作刷入 "),_("code",[e._v("os cache")]),e._v("中，这个数据就可以被搜索到了。")])]),e._v(" "),_("h2",{attrs:{id:"查询数据的工作原理"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#查询数据的工作原理"}},[e._v("#")]),e._v(" 查询数据的工作原理")]),e._v(" "),_("blockquote",[_("p",[e._v("可以通过 "),_("code",[e._v("doc id")]),e._v(" 来查询，会根据 "),_("code",[e._v("doc id")]),e._v(" 进行 hash，判断出来当时把 "),_("code",[e._v("doc id")]),e._v(" 分配到了哪个 shard 上面去，从那个 shard 去查询。")]),e._v(" "),_("ol",[_("li",[e._v("写请求是写入 primary shard，然后同步给所有的 replica shard；")]),e._v(" "),_("li",[e._v("读请求可以从 primary shard 或 replica shard 读取，采用的是随机轮询算法。")])])]),e._v(" "),_("ul",[_("li",[_("p",[_("strong",[e._v("搜索过程")])]),e._v(" "),_("ol",[_("li",[_("p",[e._v("户端发送请求到任意一个 node，成为 "),_("code",[e._v("coordinate node")]),e._v("。")])]),e._v(" "),_("li",[_("p",[_("code",[e._v("coordinate node")]),e._v(" 对 "),_("code",[e._v("doc id")]),e._v(" 进行哈希路由，将请求转发到对应的 node，此时会使用 "),_("code",[e._v("round-robin")]),e._v("随机轮询算法，在 "),_("code",[e._v("primary shard")]),e._v(" 以及其所有 replica 中随机选择一个，让读请求负载均衡。")])]),e._v(" "),_("li",[_("p",[e._v("接收请求的 node 返回 document 给 "),_("code",[e._v("coordinate node")]),e._v("。")])]),e._v(" "),_("li",[_("p",[_("code",[e._v("coordinate node")]),e._v(" 返回 document 给客户端。")]),e._v(" "),_("div",{staticClass:"language-sh line-numbers-mode"},[_("pre",{pre:!0,attrs:{class:"language-sh"}},[_("code",[e._v("客户端发送请求到一个 coordinate node。\n\n协调节点将搜索请求转发到所有的 shard 对应的 primary shard 或 replica shard，都可以。\n\nquery phase：每个 shard 将自己的搜索结果（其实就是一些 doc id）返回给协调节点，由协调节点进行数据的合并、排序、分页等操作，产出最终结果。\n\nfetch phase：接着由协调节点根据 doc "),_("span",{pre:!0,attrs:{class:"token function"}},[e._v("id")]),e._v(" 去各个节点上拉取实际的 document 数据，最终返回给客户端。\n\n\n")])]),e._v(" "),_("div",{staticClass:"line-numbers-wrapper"},[_("span",{staticClass:"line-number"},[e._v("1")]),_("br"),_("span",{staticClass:"line-number"},[e._v("2")]),_("br"),_("span",{staticClass:"line-number"},[e._v("3")]),_("br"),_("span",{staticClass:"line-number"},[e._v("4")]),_("br"),_("span",{staticClass:"line-number"},[e._v("5")]),_("br"),_("span",{staticClass:"line-number"},[e._v("6")]),_("br"),_("span",{staticClass:"line-number"},[e._v("7")]),_("br"),_("span",{staticClass:"line-number"},[e._v("8")]),_("br"),_("span",{staticClass:"line-number"},[e._v("9")]),_("br")])])])])])]),e._v(" "),_("h2",{attrs:{id:"倒排索引"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#倒排索引"}},[e._v("#")]),e._v(" 倒排索引")]),e._v(" "),_("h3",{attrs:{id:"_1-正向索引和反向索引"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_1-正向索引和反向索引"}},[e._v("#")]),e._v(" 1. 正向索引和反向索引")]),e._v(" "),_("ul",[_("li",[_("p",[e._v("先介绍一下正向索引: "),_("strong",[e._v("当用户发起查询时（假设查询为一个关键词），搜索引擎会扫描索引库中的所有文档，找出所有包含关键词的文档，这样依次从文档中去查找是否含有关键词的方法叫做正向索引")]),e._v("。互联网上存在的网页（或称文档）不计其数，这样遍历的索引结构效率低下，无法满足用户需求。")])]),e._v(" "),_("li",[_("p",[e._v("正向索引结构如下:\n文档1的ID→单词1的信息；单词2的信息；单词3的信息…\n文档2的ID→单词3的信息；单词2的信息；单词4的信息…\n…")]),e._v(" "),_("p",[_("img",{attrs:{src:"https://raw.githubusercontent.com/hellolib/pictures/main/Typora/pic-00-gitee/20220708170912.png",alt:"image-20220708170733258"}})])]),e._v(" "),_("li",[_("p",[e._v("为了增加效率，"),_("strong",[e._v("搜索引擎会把正向索引变为反向索引（倒排索引）即把“文档→单词”的形式变为“单词→文档”的形式")]),e._v("。倒排索引具体机构如下:\n单词1→文档1的ID；文档2的ID；文档3的ID…\n单词2→文档1的ID；文档4的ID；文档7的ID…\n…\n"),_("img",{attrs:{src:"https://raw.githubusercontent.com/hellolib/pictures/main/Typora/pic-00-gitee/20220708170844.png",alt:"image-20220708170741008"}})])])]),e._v(" "),_("h3",{attrs:{id:"_2-单词-文档矩阵"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_2-单词-文档矩阵"}},[e._v("#")]),e._v(" 2. 单词-文档矩阵")]),e._v(" "),_("ul",[_("li",[_("p",[e._v("单词-文档矩阵是表达两者之间所具有的一种包含关系的概念模型。\n现有以下几个文档:")]),e._v(" "),_("ul",[_("li",[_("p",[e._v("D1：乔布斯去了中国。")])]),e._v(" "),_("li",[_("p",[e._v("D2：苹果今年仍能占据大多数触摸屏产能。")])]),e._v(" "),_("li",[_("p",[e._v("D3：苹果公司首席执行官史蒂夫·乔布斯宣布，iPad2将于3月11日在美国上市。")])]),e._v(" "),_("li",[_("p",[e._v("D4：乔布斯推动了世界，iPhone、iPad、iPad2，一款一款接连不断。")])]),e._v(" "),_("li",[_("p",[e._v("D5：乔布斯吃了一个苹果。")])])])]),e._v(" "),_("li",[_("p",[e._v("此时用户查询为“苹果 And (乔布斯 Or iPad2)”，表示包含单词“苹果”，同时还包含“乔布斯”或“iPad2”的其中一个。")])]),e._v(" "),_("li",[_("p",[e._v("则“单词-文档”矩阵为:\n"),_("img",{attrs:{src:"https://raw.githubusercontent.com/hellolib/pictures/main/Typora/pic-00-gitee/20220708170839.png",alt:"image-20220708170812070"}})])]),e._v(" "),_("li",[_("p",[e._v("该矩阵可以从两个方向进行解读:")]),e._v(" "),_("ul",[_("li",[_("p",[e._v("纵向: 表示每个单独的文档包含了哪些单词，比如D1包含了“乔布斯这个词”，D4包含了“乔布斯”和“iPad2”。")])]),e._v(" "),_("li",[_("p",[e._v("横向: 表示哪些文档包含了该单词，比如D2、D3、D5包含了“苹果”这个词。")])])])])]),e._v(" "),_("blockquote",[_("p",[e._v("搜索引擎的索引其实就是实现“单词-文档”矩阵的具体数据结构。可以有不同的方式来实现上述概念模型，比如“倒排索引”、“签名文件”、“后缀树”等方式，但是“倒排索引”是实现单词到文档映射关系的最佳实现方式。")])]),e._v(" "),_("h3",{attrs:{id:"_3-倒排索引"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_3-倒排索引"}},[e._v("#")]),e._v(" 3. 倒排索引")]),e._v(" "),_("blockquote",[_("p",[_("strong",[e._v("倒排索引(Inverted Index)")]),e._v("：倒排索引是实现“单词-文档矩阵”的一种具体存储形式，通过倒排索引，可以根据单词快速获取包含这个单词的文档列表。"),_("strong",[e._v("倒排索引主要由两个部分组成：“单词词典”和“倒排文件”")]),e._v("。")])]),e._v(" "),_("ul",[_("li",[_("strong",[e._v("单词词典(Lexicon)")]),e._v("：搜索引擎的通常索引单位是单词，单词词典是由文档集合中出现过的所有单词构成的字符串集合，单词词典内每条索引项记载单词本身的一些信息以及指向“倒排列表”的指针。")]),e._v(" "),_("li",[_("strong",[e._v("倒排列表(PostingList)")]),e._v("：倒排列表记载了出现过某个单词的所有文档的文档列表及单词在该文档中出现的位置信息，每条记录称为一个倒排项(Posting)。根据倒排列表，即可获知哪些文档包含某个单词。")]),e._v(" "),_("li",[_("strong",[e._v("倒排文件(Inverted File)")]),e._v("：所有单词的倒排列表往往顺序地存储在磁盘的某个文件里，这个文件即被称之为倒排文件，倒排文件是存储倒排索引的物理文件。")])]),e._v(" "),_("p",[_("img",{attrs:{src:"https://raw.githubusercontent.com/hellolib/pictures/main/Typora/pic-00-gitee/20220708171002.png",alt:"image-20220708171002870"}})]),e._v(" "),_("blockquote",[_("p",[e._v("参考:")]),e._v(" "),_("p",[e._v("https://blog.csdn.net/qq_43403025/article/details/114779166")]),e._v(" "),_("p",[e._v("https://mp.weixin.qq.com/s/j-Rk9T_YAssy_EfTdGUs0Q")]),e._v(" "),_("p",[e._v("深入学习:")]),e._v(" "),_("p",[e._v("https://juejin.cn/post/6947984489960177677#heading-16")])])])}),[],!1,null,null,null);_.default=a.exports}}]);