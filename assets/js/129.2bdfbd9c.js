(window.webpackJsonp=window.webpackJsonp||[]).push([[129],{450:function(s,a,e){"use strict";e.r(a);var n=e(3),t=Object(n.a)({},(function(){var s=this,a=s._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"django中使用celery"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#django中使用celery"}},[s._v("#")]),s._v(" Django中使用Celery")]),s._v(" "),a("h2",{attrs:{id:"_1-前戏"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-前戏"}},[s._v("#")]),s._v(" 1.前戏")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("Celery是一个基于python开发的分布式任务队列，Django的请求处理过程都是同步的无法实现异步任务，若要实现异步任务处理需要通过其他方式（前端的一般解决方案是ajax操作），而后台Celery就是不错的选择。倘若一个用户在执行某些操作需要等待很久才返回，这大大降低了网站的吞吐量。")])]),s._v(" "),a("li",[a("p",[s._v("Django的请求处理大致流程:")]),s._v(" "),a("ul",[a("li",[s._v("请求过程简单说明：浏览器发起请求--\x3e请求处理--\x3e请求经过中间件--\x3e路由映射--\x3e视图处理业务逻辑--\x3e响应请求(template或response)")])]),s._v(" "),a("p",[a("img",{attrs:{src:"https://raw.githubusercontent.com/hellolib/pictures/main/Typora/pic-00-gitee/1075473-20180823140036415-321071592.png",alt:"1075473-20180823140036415-321071592"}})])])]),s._v(" "),a("h2",{attrs:{id:"_2-配置使用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-配置使用"}},[s._v("#")]),s._v(" 2.配置使用")]),s._v(" "),a("p",[s._v("celery很容易集成到Django框架中，当然如果想要实现定时任务的话还需要安装django-celery-beta插件，后面会说明。需要注意的是Celery4.0只支持Django版本>=1.8的，如果是小于1.8版本需要使用Celery3.1。")]),s._v(" "),a("h3",{attrs:{id:"配置"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#配置"}},[s._v("#")]),s._v(" 配置")]),s._v(" "),a("p",[s._v("新建立项目taskproj,目录结构（每个app下多了个tasks文件，用于定义任务）：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("taskproj\n├── app01\n│   ├── __init__.py\n│   ├── apps.py\n│   ├── migrations\n│   │   └── __init__.py\n│   ├── models.py\n│   ├── tasks.py\n│   └── views.py\n├── manage.py\n├── taskproj\n│   ├── __init__.py\n│   ├── settings.py\n│   ├── urls.py\n│   └── wsgi.py\n└── templates\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br")])]),a("p",[s._v("在项目目录taskproj/taskproj/目录下新建celery.py:")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("#!/usr/bin/env python3\n# -*- coding:utf-8 -*-\n# Author:wd\nfrom __future__ import absolute_import, unicode_literals\nimport os\nfrom celery import Celery\n\n\nos.environ.setdefault('DJANGO_SETTINGS_MODULE', 'taskproj.settings')  # 设置django环境\n\napp = Celery('taskproj')\n\napp.config_from_object('django.conf:settings', namespace='CELERY') #  使用CELERY_ 作为前缀，在settings中写配置\n\napp.autodiscover_tasks()  # 发现任务文件每个app下的task.py\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br")])]),a("p",[s._v("taskproj/taskproj/"),a("strong",[s._v("init")]),s._v(".py：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("from __future__ import absolute_import, unicode_literals\nfrom .celery import app as celery_app\n__all__ = ['celery_app']\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("p",[s._v("taskproj/taskproj/settings.py")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("CELERY_BROKER_URL = 'redis://10.1.210.69:6379/0' # Broker配置，使用Redis作为消息中间件\n\nCELERY_RESULT_BACKEND = 'redis://10.1.210.69:6379/0' # BACKEND配置，这里使用redis\n\nCELERY_RESULT_SERIALIZER = 'json' # 结果序列化方案\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("p",[s._v("进入项目的taskproj目录启动worker：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("celery worker -A taskproj -l debug\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("h3",{attrs:{id:"定义与触发任务"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#定义与触发任务"}},[s._v("#")]),s._v(" 定义与触发任务")]),s._v(" "),a("p",[s._v("任务定义在每个tasks文件中，app01／tasks.py：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("from __future__ import absolute_import, unicode_literals\nfrom celery import shared_task\n\n\n@shared_task\ndef add(x, y):\n    return x + y\n\n\n@shared_task\ndef mul(x, y):\n    return x * y\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br")])]),a("p",[s._v("视图中触发任务")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("from django.http import JsonResponse\nfrom app01 import tasks\n\n# Create your views here.\n\ndef index(request,*args,**kwargs):\n    res=tasks.add.delay(1,3)\n    #任务逻辑\n    return JsonResponse({'status':'successful','task_id':res.task_id})\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br")])]),a("p",[s._v("访问http://127.0.0.1:8000/index")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://images2018.cnblogs.com/blog/1075473/201808/1075473-20180823175922694-2037330814.png",alt:"img"}})]),s._v(" "),a("p",[s._v("若想获取任务结果，可以通过task_id使用AsyncResult获取结果,还可以直接通过backend获取：")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://images2018.cnblogs.com/blog/1075473/201808/1075473-20180824100626480-211214086.png",alt:"img"}})]),s._v(" "),a("h3",{attrs:{id:"扩展"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#扩展"}},[s._v("#")]),s._v(" 扩展")]),s._v(" "),a("p",[s._v("除了redis、rabbitmq能做结果存储外，还可以使用Django的orm作为结果存储，当然需要安装依赖插件，这样的好处在于我们可以直接通过django的数据查看到任务状态，同时为可以制定更多的操作，下面介绍如何使用orm作为结果存储。")]),s._v(" "),a("p",[s._v("1.安装")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("pip install django-celery-results\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("2.配置settings.py，注册app")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("INSTALLED_APPS = (\n    ...,\n    'django_celery_results',\n)\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("p",[s._v("4.修改backend配置，将redis改为django-db")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("#CELERY_RESULT_BACKEND = 'redis://10.1.210.69:6379/0' # BACKEND配置，这里使用redis\n\nCELERY_RESULT_BACKEND = 'django-db'  #使用django orm 作为结果存储\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("p",[s._v("5.修改数据库")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("python3 manage.py migrate django_celery_results\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("此时会看到数据库会多创建：")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://images2018.cnblogs.com/blog/1075473/201808/1075473-20180824101945385-924791653.png",alt:"img"}}),s._v(" 当然你有时候需要对task表进行操作，以下源码的表结构定义：")]),s._v(" "),a("p",[s._v("["),a("img",{attrs:{src:"https://common.cnblogs.com/images/copycode.gif",alt:"复制代码"}}),s._v("](javascript:void(0)😉")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("class TaskResult(models.Model):\n    \"\"\"Task result/status.\"\"\"\n\n    task_id = models.CharField(_('task id'), max_length=255, unique=True)\n    task_name = models.CharField(_('task name'), null=True, max_length=255)\n    task_args = models.TextField(_('task arguments'), null=True)\n    task_kwargs = models.TextField(_('task kwargs'), null=True)\n    status = models.CharField(_('state'), max_length=50,\n                              default=states.PENDING,\n                              choices=TASK_STATE_CHOICES\n                              )\n    content_type = models.CharField(_('content type'), max_length=128)\n    content_encoding = models.CharField(_('content encoding'), max_length=64)\n    result = models.TextField(null=True, default=None, editable=False)\n    date_done = models.DateTimeField(_('done at'), auto_now=True)\n    traceback = models.TextField(_('traceback'), blank=True, null=True)\n    hidden = models.BooleanField(editable=False, default=False, db_index=True)\n    meta = models.TextField(null=True, default=None, editable=False)\n\n    objects = managers.TaskResultManager()\n\n    class Meta:\n        \"\"\"Table information.\"\"\"\n\n        ordering = ['-date_done']\n\n        verbose_name = _('task result')\n        verbose_name_plural = _('task results')\n\n    def as_dict(self):\n        return {\n            'task_id': self.task_id,\n            'task_name': self.task_name,\n            'task_args': self.task_args,\n            'task_kwargs': self.task_kwargs,\n            'status': self.status,\n            'result': self.result,\n            'date_done': self.date_done,\n            'traceback': self.traceback,\n            'meta': self.meta,\n        }\n\n    def __str__(self):\n        return '<Task: {0.task_id} ({0.status})>'.format(self)\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br"),a("span",{staticClass:"line-number"},[s._v("28")]),a("br"),a("span",{staticClass:"line-number"},[s._v("29")]),a("br"),a("span",{staticClass:"line-number"},[s._v("30")]),a("br"),a("span",{staticClass:"line-number"},[s._v("31")]),a("br"),a("span",{staticClass:"line-number"},[s._v("32")]),a("br"),a("span",{staticClass:"line-number"},[s._v("33")]),a("br"),a("span",{staticClass:"line-number"},[s._v("34")]),a("br"),a("span",{staticClass:"line-number"},[s._v("35")]),a("br"),a("span",{staticClass:"line-number"},[s._v("36")]),a("br"),a("span",{staticClass:"line-number"},[s._v("37")]),a("br"),a("span",{staticClass:"line-number"},[s._v("38")]),a("br"),a("span",{staticClass:"line-number"},[s._v("39")]),a("br"),a("span",{staticClass:"line-number"},[s._v("40")]),a("br"),a("span",{staticClass:"line-number"},[s._v("41")]),a("br"),a("span",{staticClass:"line-number"},[s._v("42")]),a("br"),a("span",{staticClass:"line-number"},[s._v("43")]),a("br"),a("span",{staticClass:"line-number"},[s._v("44")]),a("br")])]),a("h2",{attrs:{id:"_3-django中使用定时任务"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-django中使用定时任务"}},[s._v("#")]),s._v(" 3.Django中使用定时任务")]),s._v(" "),a("p",[s._v("如果想要在django中使用定时任务功能同样是靠beat完成任务发送功能，当在Django中使用定时任务时，需要安装django-celery-beat插件。以下将介绍使用过程。")]),s._v(" "),a("h3",{attrs:{id:"安装配置"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#安装配置"}},[s._v("#")]),s._v(" 安装配置")]),s._v(" "),a("p",[s._v("1.beat插件安装")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("pip3 install django-celery-beat\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("2.注册APP")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("INSTALLED_APPS = [\n    ....   \n    'django_celery_beat',\n]\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("p",[s._v("3.数据库变更")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("python3 manage.py migrate django_celery_beat\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("4.分别启动woker和beta")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("celery -A proj beat -l info --scheduler django_celery_beat.schedulers:DatabaseScheduler  #启动beta 调度器使用数据库\n\ncelery worker -A taskproj -l info #启动woker\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("p",[s._v("5.配置admin")]),s._v(" "),a("p",[s._v("urls.py")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("# urls.py\nfrom django.conf.urls import url\nfrom django.contrib import admin\n \nurlpatterns = [\n    url(r'^admin/', admin.site.urls),\n]\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br")])]),a("p",[s._v("6.创建用户")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("python3 manage.py createsuperuser \n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("7.登录admin进行管理（地址http://127.0.0.1:8000/admin）并且还可以看到我们上次使用orm作为结果存储的表。")]),s._v(" "),a("p",[s._v("http://127.0.0.1:8000/admin/login/?next=/admin/")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://images2018.cnblogs.com/blog/1075473/201808/1075473-20180824140802430-1813363210.png",alt:"img"}})]),s._v(" "),a("p",[s._v("使用示例：")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://images2018.cnblogs.com/blog/1075473/201808/1075473-20180824142214576-1072914422.png",alt:"img"}})]),s._v(" "),a("p",[a("img",{attrs:{src:"https://images2018.cnblogs.com/blog/1075473/201808/1075473-20180824142306542-76662934.png",alt:"img"}})]),s._v(" "),a("p",[s._v("查看结果：")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://images2018.cnblogs.com/blog/1075473/201808/1075473-20180824142457980-2047538109.png",alt:"img"}})]),s._v(" "),a("h3",{attrs:{id:"二次开发"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#二次开发"}},[s._v("#")]),s._v(" 二次开发")]),s._v(" "),a("p",[s._v("django-celery-beat插件本质上是对数据库表变化检查，一旦有数据库表改变，调度器重新读取任务进行调度，所以如果想自己定制的任务页面，只需要操作beat插件的四张表就可以了。当然你还可以自己定义调度器，django-celery-beat插件已经内置了model，只需要进行导入便可进行orm操作，以下我用django reset api进行示例：")]),s._v(" "),a("p",[s._v("settings.py")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("INSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'app01.apps.App01Config',\n    'django_celery_results',\n    'django_celery_beat',\n    'rest_framework',\n]\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br")])]),a("p",[s._v("urls.py")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("urlpatterns = [\n    url(r'^admin/', admin.site.urls),\n    url(r'^index$', views.index),\n    url(r'^res$', views.get_res),\n    url(r'^tasks$', views.TaskView.as_view({'get':'list'})),\n]\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])]),a("p",[s._v("views.py")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("from django_celery_beat.models import PeriodicTask  #倒入插件model\nfrom rest_framework import serializers\nfrom rest_framework import pagination\nfrom rest_framework.viewsets import ModelViewSet\nclass Userserializer(serializers.ModelSerializer):\n    class Meta:\n        model = PeriodicTask\n        fields = '__all__'\n\nclass Mypagination(pagination.PageNumberPagination):\n    \"\"\"自定义分页\"\"\"\n    page_size=2\n    page_query_param = 'p'\n    page_size_query_param='size'\n    max_page_size=4\n\nclass TaskView(ModelViewSet):\n    queryset = PeriodicTask.objects.all()\n    serializer_class = Userserializer\n    permission_classes = []\n    pagination_class = Mypagination\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br")])]),a("p",[s._v("访问http://127.0.0.1:8000/tasks如下：")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://images2018.cnblogs.com/blog/1075473/201808/1075473-20180824153332274-1150335891.png",alt:"img"}})])])}),[],!1,null,null,null);a.default=t.exports}}]);