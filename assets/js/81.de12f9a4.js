(window.webpackJsonp=window.webpackJsonp||[]).push([[81],{402:function(t,s,n){"use strict";n.r(s);var a=n(3),e=Object(a.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"限流"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#限流"}},[t._v("#")]),t._v(" 限流")]),t._v(" "),s("h3",{attrs:{id:"_1-漏桶限流"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-漏桶限流"}},[t._v("#")]),t._v(" 1. 漏桶限流")]),t._v(" "),s("ul",[s("li",[t._v("水（请求）先进入到漏桶里，漏桶以一定的速度出水，当水流入速度过大会直接溢出("),s("strong",[t._v("过多的请求直接抛弃")]),t._v("或者降级)，可以看出漏桶算法能强行限制数据的传输速率。")])]),t._v(" "),s("p",[s("img",{attrs:{src:"https://raw.githubusercontent.com/hellolib/pictures/main/Typora/pic-00-gitee/20220708201739.png",alt:"image-20220708201739933"}})]),t._v(" "),s("ul",[s("li",[t._v("对于很多应用场景来说，除了要求能够限制数据的平均传输速率外，还要求允许某种程度的突发传输。这时候漏桶算法可能就不合适了，令牌桶算法更为适合。如图2所示，令牌桶算法的原理是系统会以一个恒定的速度往桶里放入令牌，而如果请求需要被处理，则需要先从桶里获取一个令牌，当桶里没有令牌可取时，则拒绝服务。")])]),t._v(" "),s("h3",{attrs:{id:"_2-令牌桶限流"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-令牌桶限流"}},[t._v("#")]),t._v(" 2. 令牌桶限流")]),t._v(" "),s("blockquote",[s("p",[t._v("类库 time/rate  (rate:速率)")])]),t._v(" "),s("ul",[s("li",[s("p",[t._v("令牌桶算法的原理是系统会以一个恒定的速度往桶里放入令牌，而如果请求需要被处理，则需要先从桶里获取一个令牌，当桶里没有令牌可取时，则拒绝服务或降级。")]),t._v(" "),s("img",{staticStyle:{zoom:"39%"},attrs:{src:"https://raw.githubusercontent.com/hellolib/pictures/main/Typora/pic-00-gitee/20220708201640.png",alt:"image-20211209164645108"}})])]),t._v(" "),s("h3",{attrs:{id:"_3-漏桶和令牌桶的区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-漏桶和令牌桶的区别"}},[t._v("#")]),t._v(" 3. 漏桶和令牌桶的区别")]),t._v(" "),s("ol",[s("li",[t._v("漏桶限流是匀速的, 而令牌桶可以添加缓冲区,令牌桶同样可以做到匀速")]),t._v(" "),s("li",[t._v("对于很多应用场景来说，除了要求能够限制数据的平均传输速率外，还要求允许某种程度的突发传输。这时候漏桶算法可能就不合适了，令牌桶算法更为适合。")]),t._v(" "),s("li",[t._v("一般限流都是通过令牌桶限流")])]),t._v(" "),s("h2",{attrs:{id:"time-rate"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#time-rate"}},[t._v("#")]),t._v(" time/rate")]),t._v(" "),s("h3",{attrs:{id:"_1-简单使用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-简单使用"}},[t._v("#")]),t._v(" 1. 简单使用")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("构造限流器")]),t._v(" "),s("p",[s("code",[t._v("limiter := rate.NewLimiter(limit, burst)")])]),t._v(" "),s("ul",[s("li",[t._v("第一个参数是 "),s("code",[t._v("r Limit")]),t._v("。代表每秒可以向 Token 桶中产生多少 token。Limit 实际上是 float64 的别名。")]),t._v(" "),s("li",[t._v("第二个参数是 "),s("code",[t._v("b int")]),t._v("。b 代表 Token 桶的容量大小")])])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("Wait/WaitN")]),t._v(" 获取不到等待")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("Wait 实际上就是 "),s("code",[t._v("WaitN(ctx,1)")])])]),t._v(" "),s("li",[s("p",[t._v("当使用 Wait 方法消费 Token 时，如果此时桶内 Token 数组不足 (小于 N)，那么 Wait 方法将会阻塞一段时间，直至 Token 满足条件。如果充足则直接返回。")])]),t._v(" "),s("li",[s("p",[t._v("Wait 方法有一个 context 参数, 可以设置 context 的 Deadline 或者 Timeout，来决定此次 Wait 的最长时间。")])])])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("Allow/AllowN")]),t._v("  判断当前是否可以取到token")]),t._v(" "),s("ul",[s("li",[t._v("Allow 实际上就是 "),s("code",[t._v("AllowN(time.Now(),1)")]),t._v("。")]),t._v(" "),s("li",[t._v("AllowN 方法表示，截止到某一时刻，目前桶中数目是否至少为 n 个，满足则返回 true，同时从桶中消费 n 个 token。\n反之返回不消费 Token，false。")])])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("Reserve/ReserveN")]),t._v(" 返回等待时间(预估), 再去取token")]),t._v(" "),s("ul",[s("li",[t._v("Reserve 相当于 "),s("code",[t._v("ReserveN(time.Now(), 1)")])]),t._v(" "),s("li",[t._v("ReserveN 的用法就相对来说复杂一些，当调用完成后，无论 Token 是否充足，都会返回一个 Reservation * 对象。")]),t._v(" "),s("li",[t._v("可以调用该对象的 Delay() 方法，该方法返回了需要等待的时间。如果等待时间为 0，则说明不用等待。\n必须等到等待时间之后，才能进行接下来的工作。")]),t._v(" "),s("li",[t._v("或者，如果不想等待，可以调用 Cancel() 方法，该方法会将 Token 归还。")])])])]),t._v(" "),s("div",{staticClass:"language-go line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-go"}},[s("code",[t._v("\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*\n * @date: 2021/12/9\n * @desc: ...\n */")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("package")]),t._v(" main\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"context"')]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"golang.org/x/time/rate"')]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"log"')]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"testing"')]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"time"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("TestRateLimiter")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("t "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("testing"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("T"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\tl "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" rate"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("NewLimiter")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\tlog"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("l"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Limit")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" l"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Burst")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//阻塞等待直到，取到一个token")]),t._v("\n\t\tlog"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"before Wait"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t\tc"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("_")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" context"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("WithTimeout")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("context"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Background")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" time"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Second"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" err "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" l"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Wait")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("c"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" err "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("nil")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\tlog"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"limiter wait err:"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" err"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Error")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t\tlog"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"after Wait"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 返回需要等待多久才有新的token,这样就可以等待指定时间执行任务")]),t._v("\n\t\tr "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" l"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Reserve")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t\tlog"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"reserve Delay:"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" r"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Delay")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//判断当前是否可以取到token")]),t._v("\n\t\ta "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" l"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Allow")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t\tlog"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Allow:"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*\n2021/12/09 16:59:59 1 5\n2021/12/09 16:59:59 before Wait     // 第一次请求\n2021/12/09 16:59:59 after Wait     \n2021/12/09 16:59:59 reserve Delay: 0s  // 第二次请求\n2021/12/09 16:59:59 Allow: true       //3请求\n2021/12/09 16:59:59 before Wait       // 4\n2021/12/09 16:59:59 after Wait      \n2021/12/09 16:59:59 reserve Delay: 0s  // 5\n2021/12/09 16:59:59 Allow: false       // 6\n2021/12/09 16:59:59 before Wait        //7\n... //..\n*/")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br"),s("span",{staticClass:"line-number"},[t._v("14")]),s("br"),s("span",{staticClass:"line-number"},[t._v("15")]),s("br"),s("span",{staticClass:"line-number"},[t._v("16")]),s("br"),s("span",{staticClass:"line-number"},[t._v("17")]),s("br"),s("span",{staticClass:"line-number"},[t._v("18")]),s("br"),s("span",{staticClass:"line-number"},[t._v("19")]),s("br"),s("span",{staticClass:"line-number"},[t._v("20")]),s("br"),s("span",{staticClass:"line-number"},[t._v("21")]),s("br"),s("span",{staticClass:"line-number"},[t._v("22")]),s("br"),s("span",{staticClass:"line-number"},[t._v("23")]),s("br"),s("span",{staticClass:"line-number"},[t._v("24")]),s("br"),s("span",{staticClass:"line-number"},[t._v("25")]),s("br"),s("span",{staticClass:"line-number"},[t._v("26")]),s("br"),s("span",{staticClass:"line-number"},[t._v("27")]),s("br"),s("span",{staticClass:"line-number"},[t._v("28")]),s("br"),s("span",{staticClass:"line-number"},[t._v("29")]),s("br"),s("span",{staticClass:"line-number"},[t._v("30")]),s("br"),s("span",{staticClass:"line-number"},[t._v("31")]),s("br"),s("span",{staticClass:"line-number"},[t._v("32")]),s("br"),s("span",{staticClass:"line-number"},[t._v("33")]),s("br"),s("span",{staticClass:"line-number"},[t._v("34")]),s("br"),s("span",{staticClass:"line-number"},[t._v("35")]),s("br"),s("span",{staticClass:"line-number"},[t._v("36")]),s("br"),s("span",{staticClass:"line-number"},[t._v("37")]),s("br"),s("span",{staticClass:"line-number"},[t._v("38")]),s("br"),s("span",{staticClass:"line-number"},[t._v("39")]),s("br"),s("span",{staticClass:"line-number"},[t._v("40")]),s("br"),s("span",{staticClass:"line-number"},[t._v("41")]),s("br"),s("span",{staticClass:"line-number"},[t._v("42")]),s("br"),s("span",{staticClass:"line-number"},[t._v("43")]),s("br"),s("span",{staticClass:"line-number"},[t._v("44")]),s("br"),s("span",{staticClass:"line-number"},[t._v("45")]),s("br"),s("span",{staticClass:"line-number"},[t._v("46")]),s("br"),s("span",{staticClass:"line-number"},[t._v("47")]),s("br"),s("span",{staticClass:"line-number"},[t._v("48")]),s("br"),s("span",{staticClass:"line-number"},[t._v("49")]),s("br"),s("span",{staticClass:"line-number"},[t._v("50")]),s("br")])]),s("h3",{attrs:{id:"_2-动态调整速率"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-动态调整速率"}},[t._v("#")]),t._v(" 2. 动态调整速率")]),t._v(" "),s("ol",[s("li",[s("strong",[t._v("SetLimit(Limit)")]),t._v(" 改变放入 Token 的速率")]),t._v(" "),s("li",[s("strong",[t._v("SetBurst(int)")]),t._v(" 改变 Token 桶大小")])]),t._v(" "),s("h2",{attrs:{id:"实现原理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#实现原理"}},[t._v("#")]),t._v(" 实现原理")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("Token的消费方式有三种。但其实在内部实现，最终三种消费方式都调用了reserveN函数来生成和消费Token。")])]),t._v(" "),s("li",[s("p",[t._v("我们看下reserveN函数的具体实现，整个过程非常简单。在正式讲之前，我们先了解一个简单的概念：")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("在"),s("code",[t._v("time/rate")]),t._v("中，"),s("code",[t._v("NewLimiter")]),t._v("的第一个参数是速率limit，代表了一秒钟可以产生多少Token。\n那么简单换算一下，我们就可以知道一个Token的生成间隔是多少。")])]),t._v(" "),s("li",[s("p",[t._v("有了这个生成间隔，我们就可以轻易地得到两个数据：\n**1. 生成N个新的Token一共需要多久。**time/rate中对应的实现函数 "),s("code",[t._v("durationFromTokens")]),t._v("\n**2. 给定一段时长，这段时间一共可以生成多少个Token。**time/rate中对应的实现函数为"),s("code",[t._v("tokensFromDuration")])])])])]),t._v(" "),s("li",[s("p",[t._v("reserveN实现过程如下：")]),t._v(" "),s("ol",[s("li",[s("p",[t._v("计算从上次取Token的时间到当前时刻，期间一共新产生了多少Token：")]),t._v(" "),s("ul",[s("li",[t._v("我们只在取Token之前生成新的Token，也就意味着每次取Token的间隔，实际上也是生成Token的间隔。我们可以利用"),s("code",[t._v("tokensFromDuration")]),t._v(", 轻易的算出这段时间一共产生Token的数目。\n那么，当前Token数目 = 新产生的Token数目 + 之前剩余的Token数目 - 要消费的Token数目。")])])]),t._v(" "),s("li",[s("p",[t._v("如果消费后剩余Token数目大于零，说明此时Token桶内仍不为空，此时Token充足，无需调用侧等待。\n如果Token数目小于零，则需等待一段时间。\n那么这个时候，我们可以利用durationFromTokens将当前负值的Token数转化为需要等待的时间。")])]),t._v(" "),s("li",[s("p",[t._v("将需要等待的时间等相关结果返回给调用方。")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("从上面可以看出，其实整个过程就是利用了"),s("strong",[t._v("Token数可以和时间相互转化")]),t._v("的原理。 而如果Token数为负，则需要等待相关时间即可。")])]),t._v(" "),s("li",[s("p",[t._v("**注意：**如果当消费时，Token桶中的Token数目已经为负值了，依然可以按照上述流程进行消费。随着负值越来越小，等待的时间将会越来越长。 从结果来看，这个行为跟用Timer+BlockQueue实现是一样的。")])]),t._v(" "),s("li",[s("p",[t._v("此外，整个过程为了保证线程安全，更新令牌桶相关数据时都用了mutex加锁。")])])])])])]),t._v(" "),s("li",[s("p",[t._v("我们模拟下请求与Token数变化的关系：")]),t._v(" "),s("ol",[s("li",[t._v("当某一时间，桶内Token数为3, 此时A线程请求5个Token。那么此时桶内Token不足，因此A线程需要等待2个Token的时间。且此时桶内Token数变为-2。")]),t._v(" "),s("li",[t._v("同时，B线程请求4个Token，此时桶内Token数为-2，因此B线程需要等待2+4=6个Token的时间，且此时桶内Token数变为-6。")])])]),t._v(" "),s("li",[s("p",[t._v("对于Allow函数实现时，只要判断需要等待的时间是否为0即可，如果大于0说明需要等待，则返回False，反之返回True。")])]),t._v(" "),s("li",[s("p",[t._v("对于Wait函数，直接"),s("code",[t._v("t := time.NewTimer(delay)")]),t._v("，等待对应的时间即可。")])])]),t._v(" "),s("blockquote",[s("p",[t._v("参考: https://www.cyhone.com/articles/analisys-of-golang-rate/")])])])}),[],!1,null,null,null);s.default=e.exports}}]);