(window.webpackJsonp=window.webpackJsonp||[]).push([[168],{491:function(t,s,a){"use strict";a.r(s);var n=a(3),e=Object(n.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("blockquote",[s("p",[s("a",{attrs:{href:"https://xiaolincoding.com/mysql/index/index_interview.html#%E4%BB%80%E4%B9%88%E6%98%AF%E7%B4%A2%E5%BC%95",target:"_blank",rel:"noopener noreferrer"}},[t._v("mysql索引"),s("OutboundLink")],1)])]),t._v(" "),s("h2",{attrs:{id:"_0-什么是索引"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_0-什么是索引"}},[t._v("#")]),t._v(" 0.什么是索引")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("索引是一种特殊的文件(InnoDB数据表上的索引是表空间的一个组成部分)，它们包含着对数据表里所有记录的引用指针。更通俗的说，数据库索引好比是一本书前面的目录，"),s("strong",[t._v("能加快数据库的查询速度")]),t._v(",但是会降低写入速度。")])]),t._v(" "),s("li",[s("p",[t._v("show index from table_name; 查看索引")])]),t._v(" "),s("li",[s("p",[t._v("create index 索引名字 on 表(字段); 创建辅助索引")])]),t._v(" "),s("li",[s("p",[t._v("drop index 索引名字 on 表(字段); 删除索引")])])]),t._v(" "),s("h2",{attrs:{id:"_1-索引类型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-索引类型"}},[t._v("#")]),t._v(" 1.索引类型")]),t._v(" "),s("p",[s("strong",[t._v("0.全文索引（FULLTEXT）")])]),t._v(" "),s("p",[t._v("MySQL从3.23.23版开始支持全文索引和全文检索，FULLTEXT索引仅可用于 MyISAM 表；")]),t._v(" "),s("p",[s("strong",[t._v("1.普通索引")])]),t._v(" "),s("p",[t._v("辅助索引")]),t._v(" "),s("p",[s("strong",[t._v("2. 唯一索引")])]),t._v(" "),s("p",[t._v("与普通索引类似，不同的就是：索引列的值必须唯一，但允许有空值（注意和主键不同）。如果是组合索引，则列值的组合必须唯一，创建方法和普通索引类似。")]),t._v(" "),s("p",[s("strong",[t._v("3. 主键索引")])]),t._v(" "),s("p",[t._v("聚集索引")]),t._v(" "),s("p",[s("strong",[t._v("4. 单列索引、多列索引")])]),t._v(" "),s("p",[t._v("多个单列索引与单个多列索引的查询效果不同，因为执行查询时，MySQL只能使用一个索引，会从多个索引中选择一个限制最为严格的索引。")]),t._v(" "),s("p",[s("strong",[t._v("5. 组合索引（最左前缀）")])]),t._v(" "),s("p",[t._v("联合索引")]),t._v(" "),s("h2",{attrs:{id:"_2-数据库索引原理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-数据库索引原理"}},[t._v("#")]),t._v(" 2.数据库索引原理")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("B树结构（blance tree） 根--节点--分支--叶")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://raw.githubusercontent.com/hellolib/pictures/main/Typora/pic-00-gitee/image-20210707110135032.png",alt:"image-20210707110135032"}})])]),t._v(" "),s("li",[s("p",[t._v("B+树")]),t._v(" "),s("div",{staticClass:"language-python line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#b+树 在b树的基础上进行了改良 -")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.")]),t._v(" 分支节点和根节点都不再存储实际的数据了"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("让分支和根节点能存储更多的索引的信息"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("就降低了树的高度"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n所有的实际数据都存储在叶子节点中\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2.")]),t._v(" 在叶子节点之间加入了双向的链式结构（双向链表）方便在查询中的范围条件\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3.")]),t._v(" mysql中"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("所有的b"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v("树索引的高度基本控制在"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v("层 \n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br")])]),s("p",[s("img",{attrs:{src:"https://raw.githubusercontent.com/hellolib/pictures/main/Typora/pic-00-gitee/image-20210707110210447.png",alt:"image-20210707110210447"}})]),t._v(" "),s("div",{staticClass:"language-python line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[t._v("\n第一层存 "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10000")]),t._v("的地址，"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10001")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("20000")]),t._v("的地址，"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("20001")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("30001")]),t._v("的地址。。\n第二层存 "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1000")]),t._v("，"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1001")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2000.")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v(".90001")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("100001")]),t._v("地址。。\n第三层存 "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("msg"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("jjj"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("msg"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("kkkk"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("并且第三层是一个双向链表，大大缩减了查询次数\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br")])]),s("ul",[s("li",[t._v("b+树的高度会影响索引的效率,树的高度影响因素\n"),s("ul",[s("li",[t._v("1.选择尽量短的列做索引;每一个节点的存储的信息越多，树的高度也就越低，效率也就越快；")]),t._v(" "),s("li",[t._v("2.对区分度高的列做索引,重复率超过10%不适合;")])])])])]),t._v(" "),s("li",[s("p",[t._v("聚集索引")]),t._v(" "),s("ul",[s("li",[t._v("在innodb中,聚集索引和辅助索引并存,在myisam中,只有辅助索引; 聚集索引:数据直接存储在树结构的叶子")]),t._v(" "),s("li",[t._v("主键创建的索引是聚集索引 其他键创建的索引都是辅助索引")])]),t._v(" "),s("p",[s("img",{attrs:{src:"https://raw.githubusercontent.com/hellolib/pictures/main/Typora/pic-00-gitee/image-20210707110231635.png",alt:"image-20210707110231635"}})])]),t._v(" "),s("li",[s("p",[t._v("辅助索引")]),t._v(" "),s("ul",[s("li",[t._v("数据不存在树中")]),t._v(" "),s("li",[t._v("叶子节点中存的主键，再通过一次或者多次查到数据；")])])])]),t._v(" "),s("p",[t._v("​\t"),s("img",{attrs:{src:"https://raw.githubusercontent.com/hellolib/pictures/main/Typora/pic-00-gitee/image-20210707110249223.png",alt:"image-20210707110249223"}})]),t._v(" "),s("ul",[s("li",[s("p",[t._v("辅助索引和聚集索引的配合使用（回表）")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://raw.githubusercontent.com/hellolib/pictures/main/Typora/pic-00-gitee/image-20210707110320427.png",alt:"image-20210707110320427"}})]),t._v(" "),s("ul",[s("li",[t._v("回表：通过辅助索引查到主键之后，去查聚集索引，就叫回表；")])])])])])}),[],!1,null,null,null);s.default=e.exports}}]);