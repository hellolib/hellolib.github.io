(window.webpackJsonp=window.webpackJsonp||[]).push([[62],{382:function(t,a,e){"use strict";e.r(a);var i=e(3),l=Object(i.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"一-流-i-o操作-阻塞"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#一-流-i-o操作-阻塞"}},[t._v("#")]),t._v(" 一. 流, I/O操作, 阻塞")]),t._v(" "),a("h2",{attrs:{id:"_1-流"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-流"}},[t._v("#")]),t._v(" 1. 流")]),t._v(" "),a("ul",[a("li",[t._v("可以进行I/O操作的内核对象")]),t._v(" "),a("li",[t._v("文件、管道、套接字……")]),t._v(" "),a("li",[t._v("流的入口：文件描述符(fd)")])]),t._v(" "),a("h2",{attrs:{id:"_2-i-o操作"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-i-o操作"}},[t._v("#")]),t._v(" 2. I/O操作")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("所有对流的读写操作，我们都可以称之为IO操作。")])]),t._v(" "),a("li",[a("p",[t._v("当一个流中， 在没有数据read的时候，或者说在流中已经写满了数据，再write，我们的IO操作就会出现一种现象，就是阻塞现象，如下图。")])])]),t._v(" "),a("img",{staticStyle:{zoom:"50%"},attrs:{src:"https://img.kancloud.cn/18/de/18de4271dbfbd3c5cf0193fb60e8c5b7_832x210.png",alt:"img"}}),t._v(" "),a("img",{staticStyle:{zoom:"50%"},attrs:{src:"https://img.kancloud.cn/a5/58/a558f826d4c1e0872aaa888306cf05f0_854x244.png",alt:"img"}}),t._v(" "),a("h2",{attrs:{id:"_3-阻塞"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-阻塞"}},[t._v("#")]),t._v(" 3. 阻塞")]),t._v(" "),a("img",{staticStyle:{zoom:"33%"},attrs:{src:"https://img.kancloud.cn/8b/74/8b74ba71a1e5cdae8a994712b8a85e99_755x564.png",alt:"img"}}),t._v(" "),a("p",[a("strong",[t._v("阻塞场景")]),t._v(": 你有一份快递，家里有个座机，快递到了主动给你打电话，期间你可以休息。\n"),a("img",{staticStyle:{zoom:"33%"},attrs:{src:"https://raw.githubusercontent.com/hellolib/pictures/main/Typora/pic-00-gitee/af25125ccf72dc6a288c6cb5e06f240c_757x562-20211203110017276.png",alt:"img"}})]),t._v(" "),a("p",[a("strong",[t._v("非阻塞，忙轮询场景")]),t._v(": 你性子比较急躁， 每分钟就要打电话询问快递小哥一次， 到底有没有到，快递员接你电话要停止运输，这样很耽误快递小哥的运输速度。")]),t._v(" "),a("ul",[a("li",[t._v("阻塞等待")])]),t._v(" "),a("p",[t._v("空出大脑可以安心睡觉, 不影响快递员工作（不占用CPU宝贵的时间片）。")]),t._v(" "),a("ul",[a("li",[t._v("非阻塞，忙轮询")])]),t._v(" "),a("p",[t._v("浪费时间，浪费电话费，占用快递员时间（占用CPU，系统资源）。")]),t._v(" "),a("p",[t._v("很明显，阻塞等待这种方式，对于通信上是有明显优势的， 那么它有哪些弊端呢？")]),t._v(" "),a("h1",{attrs:{id:"二-io多路复用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#二-io多路复用"}},[t._v("#")]),t._v(" 二. IO多路复用")]),t._v(" "),a("h2",{attrs:{id:"_1-阻塞io"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-阻塞io"}},[t._v("#")]),t._v(" 1. 阻塞IO")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("就像 socket 通信一样, 连接的客户端一直不发数据，那么服务端线程将会一直阻塞在 read 函数上不返回，也无法接受其他客户端连接。就会发生IO阻塞")]),t._v(" "),a("img",{staticStyle:{zoom:"67%"},attrs:{src:"https://raw.githubusercontent.com/hellolib/pictures/main/Typora/pic-00-gitee/1638502588418.gif",alt:"1638502588418"}})])]),t._v(" "),a("h2",{attrs:{id:"_2-非阻塞-io"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-非阻塞-io"}},[t._v("#")]),t._v(" 2. 非阻塞 IO")]),t._v(" "),a("ul",[a("li",[a("p",[a("strong",[t._v("恳请操作系统为我们提供一个非阻塞的 read 函数")]),t._v("。通过轮询或者回调的方法实现")]),t._v(" "),a("img",{staticStyle:{zoom:"67%"},attrs:{src:"https://raw.githubusercontent.com/hellolib/pictures/main/Typora/pic-00-gitee/1638502577323.gif",alt:"1638502577323"}})])]),t._v(" "),a("h2",{attrs:{id:"_3-io多路复用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-io多路复用"}},[t._v("#")]),t._v(" 3. IO多路复用")]),t._v(" "),a("blockquote",[a("p",[t._v("doc: https://mp.weixin.qq.com/s/kebjG5UosHmXa7AKCatSrA")])]),t._v(" "),a("ul",[a("li",[t._v("实现IO多路复用的方法:\n"),a("ul",[a("li",[t._v("select : 通过遍历(系统遍历)的方式实现, select 只能监听 1024 个文件描述符. windows,linux")]),t._v(" "),a("li",[t._v("poll: 通过遍历(系统遍历)的方式实现, 不再有文件描述符数量限制. linux")]),t._v(" "),a("li",[t._v("epoll: 通过回调的方式实现IO多路复用, 没有文件描述符限制, 效率最高. linux")])])])]),t._v(" "),a("h3",{attrs:{id:"_3-1-select"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-select"}},[t._v("#")]),t._v(" 3.1 select")]),t._v(" "),a("blockquote",[a("ol",[a("li",[a("p",[t._v("系统遍历")])]),t._v(" "),a("li",[a("p",[t._v("select 调用需要传入 fd 数组，需要拷贝一份到内核，高并发场景下这样的拷贝消耗的资源是惊人的。（可优化为不复制）")])]),t._v(" "),a("li",[a("p",[t._v("select 在内核层仍然是通过遍历的方式检查文件描述符的就绪状态，是个同步过程，只不过无系统调用切换上下文的开销。（内核层可优化为异步事件通知）")])]),t._v(" "),a("li",[a("p",[t._v("select 仅仅返回可读文件描述符的个数，具体哪个可读还是要用户自己遍历。（可优化为只返回给用户就绪的文件描述符，无需用户做无效的遍历）")])])])]),t._v(" "),a("img",{staticStyle:{zoom:"50%"},attrs:{src:"https://raw.githubusercontent.com/hellolib/pictures/main/Typora/pic-00-gitee/1638502585301.gif",alt:"1638502585301"}}),t._v(" "),a("img",{staticStyle:{zoom:"50%"},attrs:{src:"https://img.kancloud.cn/ee/43/ee430296183245bb677144388a458f5e_675x410.png",alt:"img"}}),t._v(" "),a("ul",[a("li",[t._v("我们可以开设一个代收网点，让快递员全部送到代收点。这个网店管理员叫select。这样我们就可以在家休息了，麻烦的事交给select就好了。当有快递的时候，select负责给我们打电话，期间在家休息睡觉就好了。")]),t._v(" "),a("li",[t._v("但select 代收员比较懒，她记不住快递员的单号，还有快递货物的数量。她只会告诉你快递到了，但是是谁到的，你需要挨个快递员问一遍。")])]),t._v(" "),a("h3",{attrs:{id:"_3-2-poll"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-poll"}},[t._v("#")]),t._v(" 3.2 poll")]),t._v(" "),a("blockquote",[a("ul",[a("li",[a("p",[t._v("系统遍历")])]),t._v(" "),a("li",[a("p",[t._v("poll 也是操作系统提供的系统调用函数。")])]),t._v(" "),a("li",[a("p",[t._v("它和 select 的主要区别就是，去掉了 select 只能监听 1024 个文件描述符的限制。")])])])]),t._v(" "),a("h3",{attrs:{id:"_3-2-epoll"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-epoll"}},[t._v("#")]),t._v(" 3.2 epoll")]),t._v(" "),a("blockquote",[a("ol",[a("li",[a("p",[t._v("回调(异步 IO 事件唤醒)")])]),t._v(" "),a("li",[a("p",[t._v("内核中保存一份文件描述符集合，无需用户每次都重新传入，只需告诉内核修改的部分即可。")])]),t._v(" "),a("li",[a("p",[t._v("内核不再通过轮询的方式找到就绪的文件描述符，而是通过异步 IO 事件唤醒。")])]),t._v(" "),a("li",[a("p",[t._v("内核仅会将有 IO 事件的文件描述符返回给用户，用户也无需遍历整个文件描述符集合。")])])])]),t._v(" "),a("img",{staticStyle:{zoom:"67%"},attrs:{src:"https://raw.githubusercontent.com/hellolib/pictures/main/Typora/pic-00-gitee/1638502586963.gif",alt:"1638502586963"}})])}),[],!1,null,null,null);a.default=l.exports}}]);