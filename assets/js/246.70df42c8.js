(window.webpackJsonp=window.webpackJsonp||[]).push([[246],{568:function(s,a,t){"use strict";t.r(a);var n=t(3),e=Object(n.a)({},(function(){var s=this,a=s._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h2",{attrs:{id:"前戏"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#前戏"}},[s._v("#")]),s._v(" 前戏")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("随着国产化和信创的推进，为应用适配多个操作系统和处理器架构的需求越来越普遍。常见做法是为不同平台单独构建一个版本，当用来开发的平台与部署的目标平台不同时，实现这一目标并不容易。例如在 x86 架构上开发一个应用程序并将其部署到 ARM 平台的机器上，通常需要准备 ARM 平台的基础设施用于开发和编译")])]),s._v(" "),a("li",[a("p",[s._v("一次构建多处部署的镜像分发大幅提高了应用的交付效率，对于需要跨平台部署应用的场景，利用 docker buildx 构建跨平台的镜像也是一种快捷高效的解决方案。")])]),s._v(" "),a("li",[a("p",[s._v("大部分镜像托管平台支持多平台镜像，这意味着镜像仓库中单个标签可以包含不同平台的多个镜像，以 "),a("code",[s._v("docker hub")]),s._v(" 的 "),a("code",[s._v("python")]),s._v(" 镜像仓库为例，"),a("code",[s._v("3.9.6")]),s._v(" 这个标签就包含了 10 个不同系统和架构的镜像（平台 = 系统 + 架构）；通过 "),a("code",[s._v("docker pull")]),s._v(" 或 "),a("code",[s._v("docker run")]),s._v(" 拉取一个支持跨平台的镜像时，"),a("code",[s._v("docker")]),s._v(" 会自动选择与当前运行平台相匹配的镜像。由于该特性的存在，在进行镜像的跨平台分发时，我们不需要对镜像的消费做任何处理，只需要关心镜像的生产，即如何构建跨平台的镜像。")])]),s._v(" "),a("li",[a("p",[s._v("默认的 "),a("code",[s._v("docker build")]),s._v(" 命令无法完成跨平台构建任务，我们需要为 "),a("code",[s._v("docker")]),s._v(" 命令行安装 "),a("code",[s._v("buildx")]),s._v(" 插件扩展其功能。"),a("code",[s._v("buildx")]),s._v(" 能够使用由 "),a("a",{attrs:{href:"https://github.com/moby/buildkit",target:"_blank",rel:"noopener noreferrer"}},[s._v("Moby BuildKit"),a("OutboundLink")],1),s._v(" 提供的构建镜像额外特性，它能够创建多个 builder 实例，在多个节点并行地执行构建任务，以及跨平台构建。")])])]),s._v(" "),a("h2",{attrs:{id:"docker-buildx"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#docker-buildx"}},[s._v("#")]),s._v(" docker buildx")]),s._v(" "),a("h3",{attrs:{id:"_1-启用-buildx"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-启用-buildx"}},[s._v("#")]),s._v(" 1. 启用 buildx")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("macOS 或 Windows 系统的 Docker Desktop，以及 Linux 发行版通过 "),a("code",[s._v("deb")]),s._v(" 或者 "),a("code",[s._v("rpm")]),s._v(" 包所安装的 "),a("code",[s._v("docker")]),s._v(" 内置了 "),a("code",[s._v("buildx")]),s._v("，不需要另行安装。")])]),s._v(" "),a("li",[a("p",[s._v("如果你的 "),a("code",[s._v("docker")]),s._v(" 没有 "),a("code",[s._v("buildx")]),s._v(" 命令，可以下载二进制包进行安装：")]),s._v(" "),a("ol",[a("li",[s._v("首先从 "),a("a",{attrs:{href:"https://github.com/docker/buildx/releases/latest",target:"_blank",rel:"noopener noreferrer"}},[s._v("Docker buildx"),a("OutboundLink")],1),s._v(" 项目的 release 页面找到适合自己平台的二进制文件。")]),s._v(" "),a("li",[s._v("下载二进制文件到本地并重命名为 "),a("code",[s._v("docker-buildx")]),s._v("，移动到 docker 的插件目录 "),a("code",[s._v("~/.docker/cli-plugins")]),s._v("。")]),s._v(" "),a("li",[s._v("向二进制文件授予可执行权限。")])])]),s._v(" "),a("li",[a("p",[s._v("如果本地的 "),a("code",[s._v("docker")]),s._v(" 版本高于 19.03，可以通过以下命令直接在本地构建并安装，这种方式更为方便：")]),s._v(" "),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[s._v("$ "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("DOCKER_BUILDKIT")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" build --platform"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("local -o "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(".")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"https://github.com/docker/buildx.git"')]),s._v("\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("mkdir")]),s._v(" -p ~/.docker/cli-plugins\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("mv")]),s._v(" buildx ~/.docker/cli-plugins/docker-buildx\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])])]),s._v(" "),a("li",[a("p",[s._v("使用 "),a("code",[s._v("buildx")]),s._v(" 进行构建 "),a("code",[s._v("docker buildx build .")])])]),s._v(" "),a("li",[a("p",[a("code",[s._v("buildx")]),s._v(" 和 "),a("code",[s._v("docker build")]),s._v(" 命令的使用体验基本一致，还支持 "),a("code",[s._v("build")]),s._v(" 常用的选项如 "),a("code",[s._v("-t")]),s._v("、"),a("code",[s._v("-f")]),s._v("等")])]),s._v(" "),a("li",[a("p",[s._v("基础命令")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" buildx --help\n\nUsage:  "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" buildx "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("OPTIONS"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" COMMAND\n\nBuild with BuildKit\n\nOptions:\n      --builder string   Override the configured builder instance\n\nManagement Commands:\n  imagetools  Commands to work on images "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" registry\n\nCommands:\n  bake        Build from a "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("file")]),s._v("\n  build       Start a build\n  create      Create a new builder instance\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("du")]),s._v("          Disk usage\n  inspect     Inspect current builder instance\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("ls")]),s._v("          List builder instances\n  prune       Remove build cache \n  "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("rm")]),s._v("          Remove a builder instance\n  stop        Stop builder instance\n  use         Set the current builder instance\n  version     Show buildx version information \n\nRun "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'docker buildx COMMAND --help'")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("more")]),s._v(" information on a command.\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br")])])])]),s._v(" "),a("h3",{attrs:{id:"_2-buildx-实例"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-buildx-实例"}},[s._v("#")]),s._v(" 2. buildx 实例")]),s._v(" "),a("ul",[a("li",[a("code",[s._v("docker buildx")]),s._v(" 通过 builder 实例对象来管理构建配置和节点，命令行将构建任务发送至 builder 实例，再由 builder 指派给符合条件的节点执行。")]),s._v(" "),a("li",[s._v("我们可以基于同一个 "),a("code",[s._v("docker")]),s._v(" 服务程序创建多个 builder 实例，提供给不同的项目使用以隔离各个项目的配置，也可以为一组远程 "),a("code",[s._v("docker")]),s._v(" 节点创建一个 builder 实例组成构建阵列，并在不同阵列之间快速切换。")]),s._v(" "),a("li",[s._v("使用 "),a("code",[s._v("docker buildx create")]),s._v(" 命令可以创建 builder 实例，这将以当前使用的 docker 服务为节点创建一个新的 builder 实例。要使用一个远程节点，可以在创建示例时通过 "),a("code",[s._v("DOCKER_HOST")]),s._v(" 环境变量指定远程端口或提前切换到远程节点的 "),a("code",[s._v("docker context")]),s._v("。")])]),s._v(" "),a("h4",{attrs:{id:"_2-1-创建-builder-实例"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-创建-builder-实例"}},[s._v("#")]),s._v(" 2.1 创建  builder 实例")]),s._v(" "),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[s._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" buildx create --driver docker-container --platform linux/amd64 --name multi-builder\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 创建 docker-container 驱动实例时可通过 --driver-opt image=moby/buildkit:v0.10.5 选项配置所使用的 buildkit 镜像版本。")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 刚创建的 builder 处于 inactive 状态，可以在 create 或 inspect 子命令中添加 --bootstrap 选项立即启动实例")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("h4",{attrs:{id:"_2-2-查看-实例"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-查看-实例"}},[s._v("#")]),s._v(" 2.2 查看 实例")]),s._v(" "),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[s._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" buildx "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("ls")]),s._v("\nNAME/NODE        DRIVER/ENDPOINT             STATUS   PLATFORMS\nmulti-builder    docker-container                     \n  multi-builder0 unix:///var/run/docker.sock inactive linux/amd64*\ndefault *        "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v("                               \n  default        default                     running  linux/amd64, linux/arm64, linux/riscv64, linux/ppc64le, linux/s390x, linux/386, linux/arm/v7, linux/arm/v6\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])]),a("ul",[a("li",[s._v("使用某实例："),a("code",[s._v("docker buildx use")])]),s._v(" "),a("li",[s._v("查看实例详情："),a("code",[s._v("docker buildx inspect")])]),s._v(" "),a("li",[s._v("停止实例："),a("code",[s._v("docker buildx stop")])]),s._v(" "),a("li",[s._v("删除实例："),a("code",[s._v("docker buildx rm")])])]),s._v(" "),a("h3",{attrs:{id:"_3-添加远程实例"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-添加远程实例"}},[s._v("#")]),s._v(" 3. 添加远程实例")]),s._v(" "),a("ul",[a("li",[s._v("默认的 docker build 命令无法完成跨平台构建任务，我们需要为 docker 命令行安装 buildx 插件扩展其功能。buildx 能够使用由 Moby BuildKit 提供的构建镜像额外特性，它能够创建多个 builder 实例，在多个节点并行地执行构建任务，以及跨平台构建。")])]),s._v(" "),a("h4",{attrs:{id:"_3-1-docker-远程开启"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-docker-远程开启"}},[s._v("#")]),s._v(" 3.1 docker 远程开启")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("编辑 /usr/lib/systemd/system/docker.service文件")])]),s._v(" "),a("li",[a("p",[s._v("在如下位置添加 -H tcp:"),a("em",[s._v("//0.0.0.0:2375")])])]),s._v(" "),a("li",[a("p",[s._v("重启docker")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("systemctl daemon-reload\nsystemctl restart docker\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])])]),s._v(" "),a("li",[a("p",[s._v("测试连接")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("curl http://localhost:2375/version\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[a("img",{attrs:{src:"https://raw.githubusercontent.com/hellolib/pictures/main/Typora/pic-01/20240116215336.png",alt:""}})])])]),s._v(" "),a("h4",{attrs:{id:"_3-2-buildx-添加远程节点"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-buildx-添加远程节点"}},[s._v("#")]),s._v(" 3.2 buildx 添加远程节点")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("创建并添加远程节点")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# docker 20.X 以下版本需要开启环境变量")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("export")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("DOCKER_CLI_EXPERIMENTAL")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("enabled\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 创建新builder 实例 multi-builder")]),s._v("\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" buildx create --driver docker-container --platform linux/amd64 --name multi-builder\nmulti-builder\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 添加远程arm平台的buidler")]),s._v("\n$ "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("export")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("DOCKER_HOST")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("tcp://192.168.99.100:2375 "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#(前提：远程docker开启远程访问)")]),s._v("\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" buildx create --name multi-builder --append --node remote-builder\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#启动新buidler实例 multi-builder")]),s._v("\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" buildx inspect --bootstrap multi-builder\nName:          multi-builder\nDriver:        docker-container\nLast Activity: "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2023")]),s._v("-04-14 09:59:15 +0000 UTC\n\nNodes:\nName:      multi-builder0\nEndpoint:  unix:///var/run/docker.sock\nStatus:    running\nBuildkit:  v0.9.3\nPlatforms: linux/amd64, linux/386\n\nName:      remote-builder\nEndpoint:  tcp://192.168.100.2:2375\nStatus:    running\nBuildkit:  v0.11.5\nPlatforms: linux/arm64, linux/arm/v7, linux/arm/v6\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查看现有builder所有实例")]),s._v("\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" buildx "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("ls")]),s._v("\nNAME/NODE        DRIVER/ENDPOINT              STATUS  BUILDKIT PLATFORMS\nmulti-builder *  docker-container                             \n  multi-builder0 unix:///var/run/docker.sock  running v0.9.3   linux/amd64, linux/386\n  remote-builder tcp://192.168.99.100:2375    running v0.11.5  linux/arm64, linux/arm/v7, linux/arm/v6\ndefault          "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v("                                       \n  default        default                      running "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("20.10")]),s._v(".12 linux/arm64, linux/arm/v7, linux/arm/v6\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br"),a("span",{staticClass:"line-number"},[s._v("28")]),a("br"),a("span",{staticClass:"line-number"},[s._v("29")]),a("br"),a("span",{staticClass:"line-number"},[s._v("30")]),a("br"),a("span",{staticClass:"line-number"},[s._v("31")]),a("br"),a("span",{staticClass:"line-number"},[s._v("32")]),a("br"),a("span",{staticClass:"line-number"},[s._v("33")]),a("br"),a("span",{staticClass:"line-number"},[s._v("34")]),a("br"),a("span",{staticClass:"line-number"},[s._v("35")]),a("br"),a("span",{staticClass:"line-number"},[s._v("36")]),a("br"),a("span",{staticClass:"line-number"},[s._v("37")]),a("br"),a("span",{staticClass:"line-number"},[s._v("38")]),a("br")])])])]),s._v(" "),a("h4",{attrs:{id:"_3-3-启用实例"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-3-启用实例"}},[s._v("#")]),s._v(" 3.3 启用实例")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("启用新建的multi-builder")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" buildx use multi-builder\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])])])]),s._v(" "),a("h3",{attrs:{id:"_4-buildx-构建镜像"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-buildx-构建镜像"}},[s._v("#")]),s._v(" 4. buildx 构建镜像")]),s._v(" "),a("h4",{attrs:{id:"_4-1-构建单个镜像-arm"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-1-构建单个镜像-arm"}},[s._v("#")]),s._v(" 4.1 构建单个镜像(arm)")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("构建arm的镜像到本地")]),s._v(" "),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 构建arm的镜像到本地")]),s._v("\n$ "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("OVN_IMAGE")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("harbor.yusur.tech/yusur_ovn/ovn-daemonset-f:second-cni-aarch64\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" buildx build --build-arg "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("BUILDPLATFORM")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("linux/aarch64 --build-arg "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("TARGETPLATFORM")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("linux/aarch64 --platform"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("linux/arm64 -t "),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$OVN_IMAGE")]),s._v(" -o "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("type")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("docker -f Dockerfile.fedora "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(".")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])])])]),s._v(" "),a("h4",{attrs:{id:"_4-2-构建单个镜像-amd"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-2-构建单个镜像-amd"}},[s._v("#")]),s._v(" 4.2 构建单个镜像(amd)")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("构建amd的镜像到本地")]),s._v(" "),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[s._v("$ "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("OVN_IMAGE")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("harbor.yusur.tech/yusur_ovn/ovn-daemonset-f:second-cni-amd64\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" buildx build --build-arg "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("BUILDPLATFORM")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("linux/amd64  --build-arg  "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("TARGETPLATFORM")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("linux/amd64  --platform"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("linux/amd64  -t "),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$OVN_IMAGE")]),s._v(" -o "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("type")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("docker -f Dockerfile.fedora "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(".")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])])])]),s._v(" "),a("h4",{attrs:{id:"_4-3-构建多个镜像-arm、amd"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-3-构建多个镜像-arm、amd"}},[s._v("#")]),s._v(" 4.3 构建多个镜像(arm、amd)")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("编译完成后就直接push到hub")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("$ "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("OVN_IMAGE")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("harbor.yusur.tech/yusur_ovn/ovn-daemonset-f:second-cni\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" buildx build --push --platform linux/arm64,linux/amd64 -t "),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$OVN_IMAGE")]),s._v(" -f Dockerfile.fedora "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(".")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])])]),s._v(" "),a("li",[a("p",[s._v("docker buildx build --help")]),s._v(" "),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[s._v("Usage:  "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" buildx build "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("OPTIONS"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token environment constant"}},[s._v("PATH")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" URL "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" -\n\nStart a build\n\nAliases:\n  build, b\n\nOptions:\n      --add-host strings         Add a custom host-to-IP mapping "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("host:ip"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n      --allow strings            Allow extra privileged entitlement, e.g. network.host, security.insecure\n      --build-arg stringArray    Set build-time variables\n      --builder string           Override the configured builder instance\n      --cache-from stringArray   External cache sources "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("eg. user/app:cache, "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("type")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("local,src"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("path/to/dir"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n      --cache-to stringArray     Cache "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("export")]),s._v(" destinations "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("eg. user/app:cache, "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("type")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("local,dest"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("path/to/dir"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n  -f, --file string              Name of the Dockerfile "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("Default is "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'PATH/Dockerfile'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n      --iidfile string           Write the image ID to the "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("file")]),s._v("\n      --label stringArray        Set metadata "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" an image\n      --load                     Shorthand "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" --output"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("type"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("docker\n      --network string           Set the networking mode "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" the RUN instructions during build "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("default "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"default"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n      --no-cache                 Do not use cache when building the image\n  -o, --output stringArray       Output destination "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("format: "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("type")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("local,dest"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("path"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n      --platform stringArray     Set target platform "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" build\n      --progress string          Set "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("type")]),s._v(" of progress output "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("auto, plain, "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("tty")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(". Use plain to show container output "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("default "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"auto"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n      --pull                     Always attempt to pull a newer version of the image\n      --push                     Shorthand "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" --output"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("type"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("registry  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# -o type=registry 自动推送")]),s._v("\n      --secret stringArray       Secret "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("file")]),s._v(" to expose to the build: "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("id")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("mysecret,src"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("/local/secret\n      --ssh stringArray          SSH agent socket or keys to expose to the build "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("format: default"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("id"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("socket"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">|")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("key"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v(","),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("key"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n  -t, --tag stringArray          Name and optionally a tag "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" the "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'name:tag'")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("format")]),s._v("\n      --target string            Set the target build stage to build.\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br"),a("span",{staticClass:"line-number"},[s._v("28")]),a("br"),a("span",{staticClass:"line-number"},[s._v("29")]),a("br")])])]),s._v(" "),a("li",[a("p",[a("code",[s._v("docker buildx build")]),s._v(" 支持丰富的输出行为，通过"),a("code",[s._v("--output=[PATH,-,type=TYPE[,KEY=VALUE]")]),s._v(" 选项可以指定构建结果的输出类型和路径等，常用的输出类型有以下几种：")]),s._v(" "),a("ul",[a("li",[s._v("local：构建结果将以文件系统格式写入 "),a("code",[s._v("dest")]),s._v(" 指定的本地路径， 如 "),a("code",[s._v("--output type=local,dest=./output")]),s._v("。")]),s._v(" "),a("li",[s._v("tar：构建结果将在打包后写入 "),a("code",[s._v("dest")]),s._v(" 指定的本地路径。")]),s._v(" "),a("li",[s._v("oci：构建结果以 OCI 标准镜像格式写入 "),a("code",[s._v("dest")]),s._v(" 指定的本地路径。")]),s._v(" "),a("li",[s._v("docker：构建结果以 Docker 标准镜像格式写入 "),a("code",[s._v("dest")]),s._v(" 指定的本地路径或加载到 "),a("code",[s._v("docker")]),s._v(" 的镜像库中。同时指定多个目标平台时无法使用该选项。")]),s._v(" "),a("li",[s._v("image：以镜像或者镜像列表输出，并支持 "),a("code",[s._v("push=true")]),s._v(" 选项直接推送到远程仓库，同时指定多个目标平台时可使用该选项。")]),s._v(" "),a("li",[s._v("registry："),a("code",[s._v("type=image,push=true")]),s._v(" 的精简表示。")])])])]),s._v(" "),a("h2",{attrs:{id:"buildx-构建实战"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#buildx-构建实战"}},[s._v("#")]),s._v(" buildx 构建实战")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("创建实例并启用")]),s._v(" "),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 创建实例")]),s._v("\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" buildx create --driver docker-container --platform linux/amd64 --name multi-builder\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查看实例")]),s._v("\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" buildx "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("ls")]),s._v(" \n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" buildx inspect --bootstrap multi-builder\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 启用实例")]),s._v("\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" buildx use multi-builder\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br")])])]),s._v(" "),a("li",[a("p",[s._v("main.go")]),s._v(" "),a("div",{staticClass:"language-go line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-go"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("package")]),s._v(" main\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("\n\t"),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"fmt"')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("func")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("main")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\tfmt"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("Println")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Hello world!"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br")])])]),s._v(" "),a("li",[a("p",[s._v("Dockerfile")]),s._v(" "),a("div",{staticClass:"language-dockerfile line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-dockerfile"}},[a("code",[a("span",{pre:!0,attrs:{class:"token instruction"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token options"}},[a("span",{pre:!0,attrs:{class:"token property"}},[s._v("--platform")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("$BUILDPLATFORM")])]),s._v(" golang:1.14 "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("as")]),s._v(" builder")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token instruction"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ARG")]),s._v(" TARGETARCH")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token instruction"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("WORKDIR")]),s._v(" /app")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token instruction"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("COPY")]),s._v(" main.go /app/main.go")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token instruction"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("RUN")]),s._v(" GOOS=linux GOARCH="),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$TARGETARCH")]),s._v(" go build -a -o output/main main.go")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token instruction"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" alpine:latest")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token instruction"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("WORKDIR")]),s._v(" /root")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token instruction"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("COPY")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token options"}},[a("span",{pre:!0,attrs:{class:"token property"}},[s._v("--from")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("builder")])]),s._v(" /app/output/main .")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token instruction"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("CMD")]),s._v(" /root/main")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br")])])]),s._v(" "),a("li",[a("p",[s._v("构建")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" buildx build --platform linux/amd64,linux/arm64,linux/arm -t 你的镜像名字 -o "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("type")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("registry "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(".")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])])])])])}),[],!1,null,null,null);a.default=e.exports}}]);